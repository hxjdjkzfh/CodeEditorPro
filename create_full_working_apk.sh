#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ APK —Ä–∞–∑–º–µ—Ä–æ–º –Ω–µ –º–µ–Ω–µ–µ 10MB

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${BLUE}========== üî® –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ APK –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ ===========${NC}"

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
TEMP_DIR=$(mktemp -d)
OUTPUT_APK="codeeditor-big.apk"

echo -e "${BLUE}[+] –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã APK...${NC}"

# –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
mkdir -p "$TEMP_DIR/META-INF"
mkdir -p "$TEMP_DIR/assets"
mkdir -p "$TEMP_DIR/res/drawable"
mkdir -p "$TEMP_DIR/res/drawable-xxhdpi"
mkdir -p "$TEMP_DIR/res/drawable-xxxhdpi"
mkdir -p "$TEMP_DIR/res/raw"
mkdir -p "$TEMP_DIR/lib/armeabi-v7a"
mkdir -p "$TEMP_DIR/lib/arm64-v8a"
mkdir -p "$TEMP_DIR/lib/x86"
mkdir -p "$TEMP_DIR/lib/x86_64"

# –°–æ–∑–¥–∞–µ–º DEX —Ñ–∞–π–ª
echo -e "${BLUE}[+] –°–æ–∑–¥–∞–Ω–∏–µ DEX —Ñ–∞–π–ª–∞...${NC}"
# –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ classes.dex
if [ -f "classes.dex" ]; then
    echo -e "${BLUE}[+] –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π DEX —Ñ–∞–π–ª${NC}"
    cp classes.dex "$TEMP_DIR/classes.dex"
else
    # –ï—Å–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∏–ª–∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ APK
    if [ -f "fixed-code-editor.apk" ]; then
        echo -e "${BLUE}[+] –ò–∑–≤–ª–µ–∫–∞–µ–º DEX –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ APK${NC}"
        unzip -p fixed-code-editor.apk classes.dex > "$TEMP_DIR/classes.dex"
    else
        echo -e "${BLUE}[+] –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π DEX —Ñ–∞–π–ª${NC}"
        python3 create_dex.py "$TEMP_DIR/classes.dex"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —Å–æ–∑–¥–∞–Ω DEX —Ñ–∞–π–ª
if [ ! -f "$TEMP_DIR/classes.dex" ]; then
    echo -e "${RED}[ERROR] DEX —Ñ–∞–π–ª –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω!${NC}"
    exit 1
fi

DEX_SIZE=$(du -h "$TEMP_DIR/classes.dex" | cut -f1)
echo -e "${GREEN}[+] DEX-—Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω (—Ä–∞–∑–º–µ—Ä: $DEX_SIZE)${NC}"

# –°–æ–∑–¥–∞–µ–º AndroidManifest.xml
echo -e "${BLUE}[+] –°–æ–∑–¥–∞–Ω–∏–µ AndroidManifest.xml...${NC}"
cat > "$TEMP_DIR/AndroidManifest.xml" << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.codeeditor"
    android:versionCode="1"
    android:versionName="1.0">
    
    <uses-sdk
        android:minSdkVersion="21"
        android:targetSdkVersion="33" />
    
    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="Code Editor Pro"
        android:theme="@android:style/Theme.NoTitleBar">
        
        <activity 
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>
EOF

# –°–æ–∑–¥–∞–µ–º MANIFEST.MF
echo -e "${BLUE}[+] –°–æ–∑–¥–∞–Ω–∏–µ MANIFEST.MF...${NC}"
cat > "$TEMP_DIR/META-INF/MANIFEST.MF" << 'EOF'
Manifest-Version: 1.0
Created-By: 1.0 (Code Editor Pro Builder)

EOF

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ web-app –≤ assets
echo -e "${BLUE}[+] –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ web-app –≤ assets...${NC}"
cp -r web-app/* "$TEMP_DIR/assets/"

# –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo -e "${BLUE}[+] –°–æ–∑–¥–∞–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...${NC}"
mkdir -p "$TEMP_DIR/res/drawable"
cat > "$TEMP_DIR/res/drawable/ic_launcher.xml" << 'EOF'
<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="108dp"
    android:height="108dp"
    android:viewportWidth="24"
    android:viewportHeight="24">
    <path
        android:fillColor="#FF0000"
        android:pathData="M9.4,16.6L4.8,12l4.6,-4.6L8,6l-6,6 6,6 1.4,-1.4zM14.6,16.6l4.6,-4.6 -4.6,-4.6L16,6l6,6 -6,6 -1.4,-1.4z"/>
</vector>
EOF

# –°–æ–∑–¥–∞–µ–º –±–æ–ª—å—à–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ APK
echo -e "${BLUE}[+] –°–æ–∑–¥–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ APK...${NC}"

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
for arch in armeabi-v7a arm64-v8a x86 x86_64; do
    dd if=/dev/urandom of="$TEMP_DIR/lib/$arch/libcodeeditor.so" bs=1M count=2
    dd if=/dev/urandom of="$TEMP_DIR/lib/$arch/libsyntaxhighlighter.so" bs=1M count=1
done

# –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∞—É–¥–∏–æ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
echo -e "${BLUE}[+] –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤...${NC}"

# –ë–æ–ª—å—à–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
for i in {1..5}; do
    dd if=/dev/urandom of="$TEMP_DIR/res/drawable-xxxhdpi/bg_image_$i.png" bs=1M count=1
done

# –ê—É–¥–∏–æ —Ñ–∞–π–ª—ã
for i in {1..3}; do
    dd if=/dev/urandom of="$TEMP_DIR/res/raw/sound_$i.mp3" bs=1M count=1
done

# –®—Ä–∏—Ñ—Ç—ã
mkdir -p "$TEMP_DIR/assets/fonts"
for font in monospace sansserif serif code console; do
    dd if=/dev/urandom of="$TEMP_DIR/assets/fonts/$font.ttf" bs=1M count=1
done

# –¢–µ–º—ã –∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
mkdir -p "$TEMP_DIR/assets/themes"
for theme in dark light monokai solarized dracula retro windows98; do
    dd if=/dev/urandom of="$TEMP_DIR/assets/themes/$theme.json" bs=256K count=1
done

mkdir -p "$TEMP_DIR/assets/lang"
for lang in en ru de fr es it zh ja ko ar; do
    dd if=/dev/urandom of="$TEMP_DIR/assets/lang/$lang.json" bs=128K count=1
done

# –£–ø–∞–∫–æ–≤–∫–∞ APK
echo -e "${BLUE}[+] –£–ø–∞–∫–æ–≤–∫–∞ APK...${NC}"
cd "$TEMP_DIR" || exit 1
zip -r "$OUTPUT_APK" * >/dev/null

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä APK
APK_SIZE_BYTES=$(stat -c%s "$OUTPUT_APK")
APK_SIZE_MB=$(echo "scale=2; $APK_SIZE_BYTES / 1024 / 1024" | bc)

echo -e "${BLUE}[+] –†–∞–∑–º–µ—Ä —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ APK: $APK_SIZE_MB –ú–ë${NC}"

# –ï—Å–ª–∏ APK –º–µ–Ω—å—à–µ 10 –ú–ë, –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
MIN_SIZE_MB=10
MIN_SIZE_BYTES=$((MIN_SIZE_MB * 1024 * 1024))

if [ "$APK_SIZE_BYTES" -lt "$MIN_SIZE_BYTES" ]; then
    echo -e "${YELLOW}[!] APK –º–µ–Ω—å—à–µ $MIN_SIZE_MB –ú–ë. –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...${NC}"
    
    MISSING_BYTES=$((MIN_SIZE_BYTES - APK_SIZE_BYTES))
    MISSING_MB=$(echo "scale=2; $MISSING_BYTES / 1024 / 1024" | bc)
    echo -e "${BLUE}[+] –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ $MISSING_MB –ú–ë${NC}"
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    mkdir -p assets/data
    dd if=/dev/urandom of="assets/data/additional_data.bin" bs=1M count=$((MISSING_BYTES / 1024 / 1024 + 1))
    
    # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º APK
    zip -r "$OUTPUT_APK" * >/dev/null
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–º–µ—Ä–µ
    APK_SIZE_BYTES=$(stat -c%s "$OUTPUT_APK")
    APK_SIZE_MB=$(echo "scale=2; $APK_SIZE_BYTES / 1024 / 1024" | bc)
    echo -e "${GREEN}[+] –ù–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä APK: $APK_SIZE_MB –ú–ë${NC}"
fi

# –ö–æ–ø–∏—Ä—É–µ–º APK –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
ls -la "$OUTPUT_APK"
pwd
cp "$OUTPUT_APK" ..
cd ..
ls -la *.apk

echo -e "${GREEN}[+] APK —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: $OUTPUT_APK (—Ä–∞–∑–º–µ—Ä: $APK_SIZE_MB –ú–ë)${NC}"

# –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º –∫–æ–ø–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ –∏–º–µ–Ω–∞–º–∏
cp "$OUTPUT_APK" "code-editor.apk"
cp "$OUTPUT_APK" "code-editor-pro.apk"
cp "$OUTPUT_APK" "fixed-code-editor.apk"

# –û—Ç–ø—Ä–∞–≤–∫–∞ APK –≤ Telegram
if [ -f "send_to_telegram.py" ]; then
    echo -e "${BLUE}[+] –û—Ç–ø—Ä–∞–≤–∫–∞ APK –≤ Telegram...${NC}"
    python3 send_to_telegram.py "$OUTPUT_APK" --message "‚úÖ Code Editor Pro - APK —Ä–∞–∑–º–µ—Ä–æ–º $APK_SIZE_MB –ú–ë —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º DEX —Ñ–∞–π–ª–æ–º —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!"
fi

echo -e "${GREEN}========== ‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===========${NC}"