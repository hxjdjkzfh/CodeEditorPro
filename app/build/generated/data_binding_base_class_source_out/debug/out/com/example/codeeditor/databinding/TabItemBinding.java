// Generated by view binder compiler. Do not edit!
package com.example.codeeditor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.codeeditor.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TabItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView tabCardView;

  @NonNull
  public final ImageView tabCloseButton;

  @NonNull
  public final TextView tabNameText;

  private TabItemBinding(@NonNull CardView rootView, @NonNull CardView tabCardView,
      @NonNull ImageView tabCloseButton, @NonNull TextView tabNameText) {
    this.rootView = rootView;
    this.tabCardView = tabCardView;
    this.tabCloseButton = tabCloseButton;
    this.tabNameText = tabNameText;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static TabItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TabItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.tab_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TabItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView tabCardView = (CardView) rootView;

      id = R.id.tab_close_button;
      ImageView tabCloseButton = ViewBindings.findChildViewById(rootView, id);
      if (tabCloseButton == null) {
        break missingId;
      }

      id = R.id.tab_name_text;
      TextView tabNameText = ViewBindings.findChildViewById(rootView, id);
      if (tabNameText == null) {
        break missingId;
      }

      return new TabItemBinding((CardView) rootView, tabCardView, tabCloseButton, tabNameText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
