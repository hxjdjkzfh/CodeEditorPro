name: Build WebView App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
    
    - name: Install Android build tools
      run: |
        sdkmanager "build-tools;30.0.3"
        sdkmanager "platforms;android-30"
        sdkmanager "platform-tools"
    
    - name: Create WebView app structure
      run: |
        mkdir -p android-app/app/src/main
        mkdir -p android-app/app/src/main/java/com/example/codeeditor
        mkdir -p android-app/app/src/main/res/layout
        mkdir -p android-app/app/src/main/res/values
        mkdir -p android-app/app/src/main/assets
        
        # Copying web app assets
        cp -r web-app/* android-app/app/src/main/assets/
        
        # Creating basic Android files
        cat > android-app/app/src/main/AndroidManifest.xml << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.codeeditor">
    <application
        android:allowBackup="true"
        android:icon="@android:drawable/ic_menu_edit"
        android:label="Code Editor"
        android:theme="@android:style/Theme.DeviceDefault.Light.NoActionBar">
        <activity android:name=".MainActivity" android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>
</manifest>
EOF
        
        cat > android-app/app/src/main/java/com/example/codeeditor/MainActivity.java << 'EOF'
package com.example.codeeditor;

import android.app.Activity;
import android.os.Bundle;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.webkit.WebChromeClient;

public class MainActivity extends Activity {
    private WebView webView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        webView = findViewById(R.id.webview);
        webView.getSettings().setJavaScriptEnabled(true);
        webView.setWebChromeClient(new WebChromeClient());
        webView.setWebViewClient(new WebViewClient());
        webView.loadUrl("file:///android_asset/index.html");
    }

    @Override
    public void onBackPressed() {
        if (webView.canGoBack()) {
            webView.goBack();
        } else {
            super.onBackPressed();
        }
    }
}
EOF
        
        cat > android-app/app/src/main/res/layout/activity_main.xml << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <WebView
        android:id="@+id/webview"
        android:layout_width="match_parent"
        android:layout_height="match_parent" />
</RelativeLayout>
EOF
        
        cat > android-app/app/src/main/res/values/strings.xml << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">Code Editor</string>
</resources>
EOF
        
        # Creating build files
        cat > android-app/app/build.gradle << 'EOF'
plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    
    defaultConfig {
        applicationId "com.example.codeeditor"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.1'
}
EOF
        
        cat > android-app/build.gradle << 'EOF'
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
EOF
        
        cat > android-app/settings.gradle << 'EOF'
include ':app'
EOF
        
        cat > android-app/gradle.properties << 'EOF'
org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
android.useAndroidX=true
android.enableJetifier=true
EOF
        
        # Create Gradle wrapper
        cd android-app
        gradle wrapper --gradle-version 6.7.1
        chmod +x gradlew
    
    - name: Build with Gradle
      run: |
        cd android-app
        ./gradlew assembleDebug
    
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: code-editor-app
        path: android-app/app/build/outputs/apk/debug/app-debug.apk