name: Android CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Show environment info
      run: |
        java -version
        echo "JAVA_HOME: $JAVA_HOME"
        echo "Android SDK: $ANDROID_SDK_ROOT"
        ls -la

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Check Android SDK
      run: |
        sdkmanager --list | grep "build-tools;30"
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
      
    - name: Update Gradle Wrapper
      run: ./gradlew wrapper --gradle-version 6.7.1 --distribution-type all
      
    - name: List dependencies
      run: ./gradlew :app:dependencies
      continue-on-error: true
      
    - name: Build with Gradle (with debug output)
      run: ./gradlew build --info --stacktrace
      continue-on-error: true

    - name: Build Debug APK using custom script
      run: |
        chmod +x ./build_android.sh
        ./build_android.sh
      
    - name: List output files
      run: find app/build/outputs -type f -name "*.apk" | sort
      
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
        
  release:
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download APK from build
      uses: actions/download-artifact@v3
      with:
        name: app-debug
        path: app/build/outputs/apk/debug
        
    - name: Verify downloaded artifact
      run: |
        ls -la app/build/outputs/apk/debug
        echo "Checking APK file size:"
        stat -c "%s bytes" app/build/outputs/apk/debug/app-debug.apk || echo "APK file not found or empty"
        
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: Release v1.0.${{ github.run_number }}
        draft: false
        prerelease: false
        files: app/build/outputs/apk/debug/app-debug.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}